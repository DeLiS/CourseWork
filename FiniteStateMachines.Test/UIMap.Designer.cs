// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace FiniteStateMachines.Test
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// BuildDeterminedGrammar - Use 'BuildDeterminedGrammarParams' to pass parameters into this method.
        /// </summary>
        public void BuildDeterminedGrammar()
        {
            #region Variable Declarations
            WinEdit uI_tbNonTerminalNameEdit = this.UIЛексическийанализатоWindow.UI_tbNonTerminalNameWindow.UI_tbNonTerminalNameEdit;
            WinClient uIСозданиеClient = this.UIЛексическийанализатоWindow.UIСозданиеWindow.UIСозданиеClient;
            WinEdit uI_tbNewRuleEdit = this.UIЛексическийанализатоWindow.UI_tbNewRuleWindow.UI_tbNewRuleEdit;
            WinButton uIЦифрыButton = this.UIЛексическийанализатоWindow.UIЦифрыWindow.UIЦифрыButton;
            WinGroup uIТипграмматикиGroup = this.UIЛексическийанализатоWindow.UIТипграмматикиWindow.UIТипграмматикиGroup;
            WinButton uIМаленькиебуквыButton = this.UIЛексическийанализатоWindow.UIМаленькиебуквыWindow.UIМаленькиебуквыButton;
            WinButton uIБольшиебуквыButton = this.UIЛексическийанализатоWindow.UIБольшиебуквыWindow.UIБольшиебуквыButton;
            WinComboBox uI_cbNonTerminalsComboBox = this.UIЛексическийанализатоWindow.UI_cbNonTerminalsWindow.UI_cbNonTerminalsComboBox;
            WinButton uIДобавитьправилоButton = this.UIЛексическийанализатоWindow.UIДобавитьправилоWindow.UIДобавитьправилоButton;
            WinCheckBox uIДетерминированныйавтCheckBox = this.UIЛексическийанализатоWindow.UIДетерминированныйавтWindow.UIДетерминированныйавтCheckBox;
            WinButton uIПостроитьграмматикуButton = this.UIЛексическийанализатоWindow.UIПостроитьграмматикуWindow.UIПостроитьграмматикуButton;
            #endregion

            // Type 'Digit' in '_tbNonTerminalName' text box
            uI_tbNonTerminalNameEdit.Text = this.BuildDeterminedGrammarParams.UI_tbNonTerminalNameEditText;

            // Double-Click 'Создание' client
            Mouse.DoubleClick(uIСозданиеClient, new Point(241, 98));

            // Click '_tbNewRule' text box
            Mouse.Click(uI_tbNewRuleEdit, new Point(64, 1));

            // Click 'Цифры' button
            Mouse.Click(uIЦифрыButton, new Point(102, 12));

            // Move '_tbNonTerminalName' text box from (39, 15) to 'Тип грамматики' group (9, 52)
            uIТипграмматикиGroup.EnsureClickable(new Point(9, 52));
            Mouse.StartDragging(uI_tbNonTerminalNameEdit, new Point(39, 15));
            Mouse.StopDragging(uIТипграмматикиGroup, new Point(9, 52));

            // Move '_tbNewRule' text box from (75, 10) to 'Создание' client (104, 118)
            uIСозданиеClient.EnsureClickable(new Point(104, 118));
            Mouse.StartDragging(uI_tbNewRuleEdit, new Point(75, 10));
            Mouse.StopDragging(uIСозданиеClient, new Point(104, 118));

            // Click 'Маленькие буквы' button
            Mouse.Click(uIМаленькиебуквыButton, new Point(82, 16));

            // Click 'Большие буквы' button
            Mouse.Click(uIБольшиебуквыButton, new Point(66, 10));

            // Type 'Identifier' in '_tbNonTerminalName' text box
            uI_tbNonTerminalNameEdit.Text = this.BuildDeterminedGrammarParams.UI_tbNonTerminalNameEditText1;

            // Select 'Identifier' in '_cbNonTerminals' combo box
            uI_cbNonTerminalsComboBox.SelectedItem = this.BuildDeterminedGrammarParams.UI_cbNonTerminalsComboBoxSelectedItem;

            // Click '_tbNewRule' text box
            Mouse.Click(uI_tbNewRuleEdit, new Point(187, 4));

            // Move '_tbNewRule' text box from (169, 17) to 'Маленькие буквы' button (95, 4)
            uIМаленькиебуквыButton.EnsureClickable(new Point(95, 4));
            Mouse.StartDragging(uI_tbNewRuleEdit, new Point(169, 17));
            Mouse.StopDragging(uIМаленькиебуквыButton, new Point(95, 4));

            // Click 'Добавить правило' button
            Mouse.Click(uIДобавитьправилоButton, new Point(37, 17));

            // Select 'Детерминированный автомат' check box
            uIДетерминированныйавтCheckBox.Checked = this.BuildDeterminedGrammarParams.UIДетерминированныйавтCheckBoxChecked;

            // Click 'Построить грамматику' button
            Mouse.Click(uIПостроитьграмматикуButton, new Point(31, 12));
        }
        
        /// <summary>
        /// RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinGroup uIТипграмматикиGroup = this.UIЛексическийанализатоWindow.UIТипграмматикиWindow.UIТипграмматикиGroup;
            WinRadioButton uIКонтекстносвободнаяRadioButton = this.UIЛексическийанализатоWindow.UIКонтекстносвободнаяWindow.UIКонтекстносвободнаяRadioButton;
            WinEdit uI_tbNonTerminalNameEdit = this.UIЛексическийанализатоWindow.UI_tbNonTerminalNameWindow.UI_tbNonTerminalNameEdit;
            WinButton uIДобавитьнетерминалButton = this.UIЛексическийанализатоWindow.UIДобавитьнетерминалWindow.UIДобавитьнетерминалButton;
            WinButton uIОКButton = this.UIОКWindow.UIОКButton;
            WinComboBox uI_cbNonTerminalsComboBox = this.UIЛексическийанализатоWindow.UI_cbNonTerminalsWindow.UI_cbNonTerminalsComboBox;
            WinEdit uI_tbNewRuleEdit = this.UIЛексическийанализатоWindow.UI_tbNewRuleWindow.UI_tbNewRuleEdit;
            WinButton uIМаленькиебуквыButton = this.UIЛексическийанализатоWindow.UIМаленькиебуквыWindow.UIМаленькиебуквыButton;
            WinButton uIБольшиебуквыButton = this.UIЛексическийанализатоWindow.UIБольшиебуквыWindow.UIБольшиебуквыButton;
            WinClient uIСозданиеClient = this.UIЛексическийанализатоWindow.UIСозданиеWindow.UIСозданиеClient;
            WinWindow uI_tbNewRuleWindow = this.UIЛексическийанализатоWindow.UIСозданиеClient.UI_tbNewRuleWindow;
            WinButton uIЦифрыButton = this.UIЛексическийанализатоWindow.UIЦифрыWindow.UIЦифрыButton;
            WinButton uIДобавитьправилоButton = this.UIЛексическийанализатоWindow.UIДобавитьправилоWindow.UIДобавитьправилоButton;
            WinButton uIПостроитьграмматикуButton = this.UIЛексическийанализатоWindow.UIПостроитьграмматикуWindow.UIПостроитьграмматикуButton;
            WinTabPage uIИспользованиеTabPage = this.UIЛексическийанализатоWindow.UI_tcTabsWindow.UIИспользованиеTabPage;
            WinEdit uI_tbTextEdit = this.UIЛексическийанализатоWindow.UI_tbTextWindow.UI_tbTextEdit;
            #endregion

            // Click 'Тип грамматики' group
            Mouse.Click(uIТипграмматикиGroup, new Point(108, 53));

            // Select 'Контекстно-свободная' radio button
            uIКонтекстносвободнаяRadioButton.Selected = this.RecordedMethod1Params.UIКонтекстносвободнаяRadioButtonSelected;

            // Type 'L' in '_tbNonTerminalName' text box
            uI_tbNonTerminalNameEdit.Text = this.RecordedMethod1Params.UI_tbNonTerminalNameEditText;

            // Click 'Добавить нетерминал' button
            Mouse.Click(uIДобавитьнетерминалButton, new Point(24, 19));

            // Click 'Добавить нетерминал' button
            Mouse.Click(uIДобавитьнетерминалButton, new Point(88, 5));

            // Click 'ОК' button
            Mouse.Click(uIОКButton, new Point(54, 12));

            // Select 'L' in '_cbNonTerminals' combo box
            uI_cbNonTerminalsComboBox.SelectedItem = this.RecordedMethod1Params.UI_cbNonTerminalsComboBoxSelectedItem;

            // Click '_tbNewRule' text box
            Mouse.Click(uI_tbNewRuleEdit, new Point(246, 2));

            // Click 'Маленькие буквы' button
            Mouse.Click(uIМаленькиебуквыButton, new Point(111, 19));

            // Click 'Большие буквы' button
            Mouse.Click(uIБольшиебуквыButton, new Point(101, 12));

            // Type 'D' in '_tbNonTerminalName' text box
            uI_tbNonTerminalNameEdit.Text = this.RecordedMethod1Params.UI_tbNonTerminalNameEditText1;

            // Click 'Добавить нетерминал' button
            Mouse.Click(uIДобавитьнетерминалButton, new Point(73, 0));

            // Click 'Создание' client
            Mouse.Click(uIСозданиеClient, new Point(645, 52));

            // Select 'D' in '_cbNonTerminals' combo box
            uI_cbNonTerminalsComboBox.SelectedItem = this.RecordedMethod1Params.UI_cbNonTerminalsComboBoxSelectedItem1;

            // Click '_tbNewRule' window
            Mouse.Click(uI_tbNewRuleWindow, new Point(201, 18));

            // Move '_tbNewRule' text box from (166, 7) to 'Создание' client (147, 103)
            uIСозданиеClient.EnsureClickable(new Point(147, 103));
            Mouse.StartDragging(uI_tbNewRuleEdit, new Point(166, 7));
            Mouse.StopDragging(uIСозданиеClient, new Point(147, 103));

            // Click 'Цифры' button
            Mouse.Click(uIЦифрыButton, new Point(67, 16));

            // Type 'W' in '_tbNonTerminalName' text box
            uI_tbNonTerminalNameEdit.Text = this.RecordedMethod1Params.UI_tbNonTerminalNameEditText2;

            // Double-Click 'Добавить нетерминал' button
            Mouse.DoubleClick(uIДобавитьнетерминалButton, new Point(79, 3));

            // Click 'ОК' button
            Mouse.Click(uIОКButton, new Point(49, 15));

            // Select 'W' in '_cbNonTerminals' combo box
            uI_cbNonTerminalsComboBox.SelectedItem = this.RecordedMethod1Params.UI_cbNonTerminalsComboBoxSelectedItem2;

            // Type '' '' in '_tbNewRule' text box
            uI_tbNewRuleEdit.Text = this.RecordedMethod1Params.UI_tbNewRuleEditText;

            // Click 'Добавить правило' button
            Mouse.Click(uIДобавитьправилоButton, new Point(88, 16));

            // Type 'I' in '_tbNonTerminalName' text box
            uI_tbNonTerminalNameEdit.Text = this.RecordedMethod1Params.UI_tbNonTerminalNameEditText3;

            // Click 'Добавить нетерминал' button
            Mouse.Click(uIДобавитьнетерминалButton, new Point(58, 13));

            // Select 'I' in '_cbNonTerminals' combo box
            uI_cbNonTerminalsComboBox.SelectedItem = this.RecordedMethod1Params.UI_cbNonTerminalsComboBoxSelectedItem3;

            // Type '(<L>&((<L>|<D>)*))' in '_tbNewRule' text box
            uI_tbNewRuleEdit.Text = this.RecordedMethod1Params.UI_tbNewRuleEditText1;

            // Click 'Добавить правило' button
            Mouse.Click(uIДобавитьправилоButton, new Point(55, 13));

            // Click 'Создание' client
            Mouse.Click(uIСозданиеClient, new Point(536, 214));

            // Click 'Построить грамматику' button
            Mouse.Click(uIПостроитьграмматикуButton, new Point(65, 12));

            // Click 'Использование' tab
            Mouse.Click(uIИспользованиеTabPage, new Point(47, 10));

            // Type 'asd 3 as3f 3dfa' in '_tbText' text box
            uI_tbTextEdit.Text = this.RecordedMethod1Params.UI_tbTextEditText;
        }
        
        #region Properties
        public virtual BuildDeterminedGrammarParams BuildDeterminedGrammarParams
        {
            get
            {
                if ((this.mBuildDeterminedGrammarParams == null))
                {
                    this.mBuildDeterminedGrammarParams = new BuildDeterminedGrammarParams();
                }
                return this.mBuildDeterminedGrammarParams;
            }
        }
        
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public UIЛексическийанализатоWindow UIЛексическийанализатоWindow
        {
            get
            {
                if ((this.mUIЛексическийанализатоWindow == null))
                {
                    this.mUIЛексическийанализатоWindow = new UIЛексическийанализатоWindow();
                }
                return this.mUIЛексическийанализатоWindow;
            }
        }
        
        public UIОКWindow UIОКWindow
        {
            get
            {
                if ((this.mUIОКWindow == null))
                {
                    this.mUIОКWindow = new UIОКWindow();
                }
                return this.mUIОКWindow;
            }
        }
        #endregion
        
        #region Fields
        private BuildDeterminedGrammarParams mBuildDeterminedGrammarParams;
        
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private UIЛексическийанализатоWindow mUIЛексическийанализатоWindow;
        
        private UIОКWindow mUIОКWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'BuildDeterminedGrammar'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class BuildDeterminedGrammarParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Digit' in '_tbNonTerminalName' text box
        /// </summary>
        public string UI_tbNonTerminalNameEditText = "Digit";
        
        /// <summary>
        /// Type 'Identifier' in '_tbNonTerminalName' text box
        /// </summary>
        public string UI_tbNonTerminalNameEditText1 = "Identifier";
        
        /// <summary>
        /// Select 'Identifier' in '_cbNonTerminals' combo box
        /// </summary>
        public string UI_cbNonTerminalsComboBoxSelectedItem = "Identifier";
        
        /// <summary>
        /// Select 'Детерминированный автомат' check box
        /// </summary>
        public bool UIДетерминированныйавтCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Select 'Контекстно-свободная' radio button
        /// </summary>
        public bool UIКонтекстносвободнаяRadioButtonSelected = true;
        
        /// <summary>
        /// Type 'L' in '_tbNonTerminalName' text box
        /// </summary>
        public string UI_tbNonTerminalNameEditText = "L";
        
        /// <summary>
        /// Select 'L' in '_cbNonTerminals' combo box
        /// </summary>
        public string UI_cbNonTerminalsComboBoxSelectedItem = "L";
        
        /// <summary>
        /// Type 'D' in '_tbNonTerminalName' text box
        /// </summary>
        public string UI_tbNonTerminalNameEditText1 = "D";
        
        /// <summary>
        /// Select 'D' in '_cbNonTerminals' combo box
        /// </summary>
        public string UI_cbNonTerminalsComboBoxSelectedItem1 = "D";
        
        /// <summary>
        /// Type 'W' in '_tbNonTerminalName' text box
        /// </summary>
        public string UI_tbNonTerminalNameEditText2 = "W";
        
        /// <summary>
        /// Select 'W' in '_cbNonTerminals' combo box
        /// </summary>
        public string UI_cbNonTerminalsComboBoxSelectedItem2 = "W";
        
        /// <summary>
        /// Type '' '' in '_tbNewRule' text box
        /// </summary>
        public string UI_tbNewRuleEditText = "\' \'";
        
        /// <summary>
        /// Type 'I' in '_tbNonTerminalName' text box
        /// </summary>
        public string UI_tbNonTerminalNameEditText3 = "I";
        
        /// <summary>
        /// Select 'I' in '_cbNonTerminals' combo box
        /// </summary>
        public string UI_cbNonTerminalsComboBoxSelectedItem3 = "I";
        
        /// <summary>
        /// Type '(<L>&((<L>|<D>)*))' in '_tbNewRule' text box
        /// </summary>
        public string UI_tbNewRuleEditText1 = "(<L>&((<L>|<D>)*))";
        
        /// <summary>
        /// Type 'asd 3 as3f 3dfa' in '_tbText' text box
        /// </summary>
        public string UI_tbTextEditText = "asd 3 as3f 3dfa";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIЛексическийанализатоWindow : WinWindow
    {
        
        public UIЛексическийанализатоWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Лексический анализатор";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Лексический анализатор");
            #endregion
        }
        
        #region Properties
        public UI_tbNonTerminalNameWindow UI_tbNonTerminalNameWindow
        {
            get
            {
                if ((this.mUI_tbNonTerminalNameWindow == null))
                {
                    this.mUI_tbNonTerminalNameWindow = new UI_tbNonTerminalNameWindow(this);
                }
                return this.mUI_tbNonTerminalNameWindow;
            }
        }
        
        public UIСозданиеWindow UIСозданиеWindow
        {
            get
            {
                if ((this.mUIСозданиеWindow == null))
                {
                    this.mUIСозданиеWindow = new UIСозданиеWindow(this);
                }
                return this.mUIСозданиеWindow;
            }
        }
        
        public UI_tbNewRuleWindow UI_tbNewRuleWindow
        {
            get
            {
                if ((this.mUI_tbNewRuleWindow == null))
                {
                    this.mUI_tbNewRuleWindow = new UI_tbNewRuleWindow(this);
                }
                return this.mUI_tbNewRuleWindow;
            }
        }
        
        public UIЦифрыWindow UIЦифрыWindow
        {
            get
            {
                if ((this.mUIЦифрыWindow == null))
                {
                    this.mUIЦифрыWindow = new UIЦифрыWindow(this);
                }
                return this.mUIЦифрыWindow;
            }
        }
        
        public UIТипграмматикиWindow UIТипграмматикиWindow
        {
            get
            {
                if ((this.mUIТипграмматикиWindow == null))
                {
                    this.mUIТипграмматикиWindow = new UIТипграмматикиWindow(this);
                }
                return this.mUIТипграмматикиWindow;
            }
        }
        
        public UIМаленькиебуквыWindow UIМаленькиебуквыWindow
        {
            get
            {
                if ((this.mUIМаленькиебуквыWindow == null))
                {
                    this.mUIМаленькиебуквыWindow = new UIМаленькиебуквыWindow(this);
                }
                return this.mUIМаленькиебуквыWindow;
            }
        }
        
        public UIБольшиебуквыWindow UIБольшиебуквыWindow
        {
            get
            {
                if ((this.mUIБольшиебуквыWindow == null))
                {
                    this.mUIБольшиебуквыWindow = new UIБольшиебуквыWindow(this);
                }
                return this.mUIБольшиебуквыWindow;
            }
        }
        
        public UI_cbNonTerminalsWindow UI_cbNonTerminalsWindow
        {
            get
            {
                if ((this.mUI_cbNonTerminalsWindow == null))
                {
                    this.mUI_cbNonTerminalsWindow = new UI_cbNonTerminalsWindow(this);
                }
                return this.mUI_cbNonTerminalsWindow;
            }
        }
        
        public UIДобавитьправилоWindow UIДобавитьправилоWindow
        {
            get
            {
                if ((this.mUIДобавитьправилоWindow == null))
                {
                    this.mUIДобавитьправилоWindow = new UIДобавитьправилоWindow(this);
                }
                return this.mUIДобавитьправилоWindow;
            }
        }
        
        public UIДетерминированныйавтWindow UIДетерминированныйавтWindow
        {
            get
            {
                if ((this.mUIДетерминированныйавтWindow == null))
                {
                    this.mUIДетерминированныйавтWindow = new UIДетерминированныйавтWindow(this);
                }
                return this.mUIДетерминированныйавтWindow;
            }
        }
        
        public UIПостроитьграмматикуWindow UIПостроитьграмматикуWindow
        {
            get
            {
                if ((this.mUIПостроитьграмматикуWindow == null))
                {
                    this.mUIПостроитьграмматикуWindow = new UIПостроитьграмматикуWindow(this);
                }
                return this.mUIПостроитьграмматикуWindow;
            }
        }
        
        public UIКонтекстносвободнаяWindow UIКонтекстносвободнаяWindow
        {
            get
            {
                if ((this.mUIКонтекстносвободнаяWindow == null))
                {
                    this.mUIКонтекстносвободнаяWindow = new UIКонтекстносвободнаяWindow(this);
                }
                return this.mUIКонтекстносвободнаяWindow;
            }
        }
        
        public UIДобавитьнетерминалWindow UIДобавитьнетерминалWindow
        {
            get
            {
                if ((this.mUIДобавитьнетерминалWindow == null))
                {
                    this.mUIДобавитьнетерминалWindow = new UIДобавитьнетерминалWindow(this);
                }
                return this.mUIДобавитьнетерминалWindow;
            }
        }
        
        public UIСозданиеClient UIСозданиеClient
        {
            get
            {
                if ((this.mUIСозданиеClient == null))
                {
                    this.mUIСозданиеClient = new UIСозданиеClient(this);
                }
                return this.mUIСозданиеClient;
            }
        }
        
        public UI_tcTabsWindow UI_tcTabsWindow
        {
            get
            {
                if ((this.mUI_tcTabsWindow == null))
                {
                    this.mUI_tcTabsWindow = new UI_tcTabsWindow(this);
                }
                return this.mUI_tcTabsWindow;
            }
        }
        
        public UI_tbTextWindow UI_tbTextWindow
        {
            get
            {
                if ((this.mUI_tbTextWindow == null))
                {
                    this.mUI_tbTextWindow = new UI_tbTextWindow(this);
                }
                return this.mUI_tbTextWindow;
            }
        }
        #endregion
        
        #region Fields
        private UI_tbNonTerminalNameWindow mUI_tbNonTerminalNameWindow;
        
        private UIСозданиеWindow mUIСозданиеWindow;
        
        private UI_tbNewRuleWindow mUI_tbNewRuleWindow;
        
        private UIЦифрыWindow mUIЦифрыWindow;
        
        private UIТипграмматикиWindow mUIТипграмматикиWindow;
        
        private UIМаленькиебуквыWindow mUIМаленькиебуквыWindow;
        
        private UIБольшиебуквыWindow mUIБольшиебуквыWindow;
        
        private UI_cbNonTerminalsWindow mUI_cbNonTerminalsWindow;
        
        private UIДобавитьправилоWindow mUIДобавитьправилоWindow;
        
        private UIДетерминированныйавтWindow mUIДетерминированныйавтWindow;
        
        private UIПостроитьграмматикуWindow mUIПостроитьграмматикуWindow;
        
        private UIКонтекстносвободнаяWindow mUIКонтекстносвободнаяWindow;
        
        private UIДобавитьнетерминалWindow mUIДобавитьнетерминалWindow;
        
        private UIСозданиеClient mUIСозданиеClient;
        
        private UI_tcTabsWindow mUI_tcTabsWindow;
        
        private UI_tbTextWindow mUI_tbTextWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UI_tbNonTerminalNameWindow : WinWindow
    {
        
        public UI_tbNonTerminalNameWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_tbNonTerminalName";
            this.WindowTitles.Add("Лексический анализатор");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_tbNonTerminalNameEdit
        {
            get
            {
                if ((this.mUI_tbNonTerminalNameEdit == null))
                {
                    this.mUI_tbNonTerminalNameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUI_tbNonTerminalNameEdit.WindowTitles.Add("Лексический анализатор");
                    #endregion
                }
                return this.mUI_tbNonTerminalNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_tbNonTerminalNameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIСозданиеWindow : WinWindow
    {
        
        public UIСозданиеWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_tpCreation";
            this.WindowTitles.Add("Лексический анализатор");
            #endregion
        }
        
        #region Properties
        public WinClient UIСозданиеClient
        {
            get
            {
                if ((this.mUIСозданиеClient == null))
                {
                    this.mUIСозданиеClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIСозданиеClient.SearchProperties[WinControl.PropertyNames.Name] = "Создание";
                    this.mUIСозданиеClient.WindowTitles.Add("Лексический анализатор");
                    #endregion
                }
                return this.mUIСозданиеClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIСозданиеClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UI_tbNewRuleWindow : WinWindow
    {
        
        public UI_tbNewRuleWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_tbNewRule";
            this.WindowTitles.Add("Лексический анализатор");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_tbNewRuleEdit
        {
            get
            {
                if ((this.mUI_tbNewRuleEdit == null))
                {
                    this.mUI_tbNewRuleEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUI_tbNewRuleEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Выберете нетерминал";
                    this.mUI_tbNewRuleEdit.WindowTitles.Add("Лексический анализатор");
                    #endregion
                }
                return this.mUI_tbNewRuleEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_tbNewRuleEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIЦифрыWindow : WinWindow
    {
        
        public UIЦифрыWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btAddDigits";
            this.WindowTitles.Add("Лексический анализатор");
            #endregion
        }
        
        #region Properties
        public WinButton UIЦифрыButton
        {
            get
            {
                if ((this.mUIЦифрыButton == null))
                {
                    this.mUIЦифрыButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIЦифрыButton.SearchProperties[WinButton.PropertyNames.Name] = "Цифры";
                    this.mUIЦифрыButton.WindowTitles.Add("Лексический анализатор");
                    #endregion
                }
                return this.mUIЦифрыButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIЦифрыButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIТипграмматикиWindow : WinWindow
    {
        
        public UIТипграмматикиWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_gbGrammarType";
            this.WindowTitles.Add("Лексический анализатор");
            #endregion
        }
        
        #region Properties
        public WinGroup UIТипграмматикиGroup
        {
            get
            {
                if ((this.mUIТипграмматикиGroup == null))
                {
                    this.mUIТипграмматикиGroup = new WinGroup(this);
                    #region Search Criteria
                    this.mUIТипграмматикиGroup.SearchProperties[WinControl.PropertyNames.Name] = "Тип грамматики";
                    this.mUIТипграмматикиGroup.WindowTitles.Add("Лексический анализатор");
                    #endregion
                }
                return this.mUIТипграмматикиGroup;
            }
        }
        #endregion
        
        #region Fields
        private WinGroup mUIТипграмматикиGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIМаленькиебуквыWindow : WinWindow
    {
        
        public UIМаленькиебуквыWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btAddLetters";
            this.WindowTitles.Add("Лексический анализатор");
            #endregion
        }
        
        #region Properties
        public WinButton UIМаленькиебуквыButton
        {
            get
            {
                if ((this.mUIМаленькиебуквыButton == null))
                {
                    this.mUIМаленькиебуквыButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIМаленькиебуквыButton.SearchProperties[WinButton.PropertyNames.Name] = "Маленькие буквы";
                    this.mUIМаленькиебуквыButton.WindowTitles.Add("Лексический анализатор");
                    #endregion
                }
                return this.mUIМаленькиебуквыButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIМаленькиебуквыButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIБольшиебуквыWindow : WinWindow
    {
        
        public UIБольшиебуквыWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btAddCapitalLetters";
            this.WindowTitles.Add("Лексический анализатор");
            #endregion
        }
        
        #region Properties
        public WinButton UIБольшиебуквыButton
        {
            get
            {
                if ((this.mUIБольшиебуквыButton == null))
                {
                    this.mUIБольшиебуквыButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIБольшиебуквыButton.SearchProperties[WinButton.PropertyNames.Name] = "Большие буквы";
                    this.mUIБольшиебуквыButton.WindowTitles.Add("Лексический анализатор");
                    #endregion
                }
                return this.mUIБольшиебуквыButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIБольшиебуквыButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UI_cbNonTerminalsWindow : WinWindow
    {
        
        public UI_cbNonTerminalsWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_cbNonTerminals";
            this.WindowTitles.Add("Лексический анализатор");
            #endregion
        }
        
        #region Properties
        public WinComboBox UI_cbNonTerminalsComboBox
        {
            get
            {
                if ((this.mUI_cbNonTerminalsComboBox == null))
                {
                    this.mUI_cbNonTerminalsComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUI_cbNonTerminalsComboBox.WindowTitles.Add("Лексический анализатор");
                    #endregion
                }
                return this.mUI_cbNonTerminalsComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUI_cbNonTerminalsComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIДобавитьправилоWindow : WinWindow
    {
        
        public UIДобавитьправилоWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btAddRule";
            this.WindowTitles.Add("Лексический анализатор");
            #endregion
        }
        
        #region Properties
        public WinButton UIДобавитьправилоButton
        {
            get
            {
                if ((this.mUIДобавитьправилоButton == null))
                {
                    this.mUIДобавитьправилоButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIДобавитьправилоButton.SearchProperties[WinButton.PropertyNames.Name] = "Добавить правило";
                    this.mUIДобавитьправилоButton.WindowTitles.Add("Лексический анализатор");
                    #endregion
                }
                return this.mUIДобавитьправилоButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIДобавитьправилоButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIДетерминированныйавтWindow : WinWindow
    {
        
        public UIДетерминированныйавтWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_chbDetermenistic";
            this.WindowTitles.Add("Лексический анализатор");
            #endregion
        }
        
        #region Properties
        public WinCheckBox UIДетерминированныйавтCheckBox
        {
            get
            {
                if ((this.mUIДетерминированныйавтCheckBox == null))
                {
                    this.mUIДетерминированныйавтCheckBox = new WinCheckBox(this);
                    #region Search Criteria
                    this.mUIДетерминированныйавтCheckBox.SearchProperties[WinCheckBox.PropertyNames.Name] = "Детерминированный автомат";
                    this.mUIДетерминированныйавтCheckBox.WindowTitles.Add("Лексический анализатор");
                    #endregion
                }
                return this.mUIДетерминированныйавтCheckBox;
            }
        }
        #endregion
        
        #region Fields
        private WinCheckBox mUIДетерминированныйавтCheckBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIПостроитьграмматикуWindow : WinWindow
    {
        
        public UIПостроитьграмматикуWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btBuildGrammar";
            this.WindowTitles.Add("Лексический анализатор");
            #endregion
        }
        
        #region Properties
        public WinButton UIПостроитьграмматикуButton
        {
            get
            {
                if ((this.mUIПостроитьграмматикуButton == null))
                {
                    this.mUIПостроитьграмматикуButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIПостроитьграмматикуButton.SearchProperties[WinButton.PropertyNames.Name] = "Построить грамматику";
                    this.mUIПостроитьграмматикуButton.WindowTitles.Add("Лексический анализатор");
                    #endregion
                }
                return this.mUIПостроитьграмматикуButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIПостроитьграмматикуButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIКонтекстносвободнаяWindow : WinWindow
    {
        
        public UIКонтекстносвободнаяWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_rbContexFree";
            this.WindowTitles.Add("Лексический анализатор");
            #endregion
        }
        
        #region Properties
        public WinRadioButton UIКонтекстносвободнаяRadioButton
        {
            get
            {
                if ((this.mUIКонтекстносвободнаяRadioButton == null))
                {
                    this.mUIКонтекстносвободнаяRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUIКонтекстносвободнаяRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "Контекстно-свободная";
                    this.mUIКонтекстносвободнаяRadioButton.WindowTitles.Add("Лексический анализатор");
                    #endregion
                }
                return this.mUIКонтекстносвободнаяRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mUIКонтекстносвободнаяRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIДобавитьнетерминалWindow : WinWindow
    {
        
        public UIДобавитьнетерминалWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_btAddNonTerminal";
            this.WindowTitles.Add("Лексический анализатор");
            #endregion
        }
        
        #region Properties
        public WinButton UIДобавитьнетерминалButton
        {
            get
            {
                if ((this.mUIДобавитьнетерминалButton == null))
                {
                    this.mUIДобавитьнетерминалButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIДобавитьнетерминалButton.SearchProperties[WinButton.PropertyNames.Name] = "Добавить нетерминал";
                    this.mUIДобавитьнетерминалButton.WindowTitles.Add("Лексический анализатор");
                    #endregion
                }
                return this.mUIДобавитьнетерминалButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIДобавитьнетерминалButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIСозданиеClient : WinClient
    {
        
        public UIСозданиеClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Создание";
            this.WindowTitles.Add("Лексический анализатор");
            #endregion
        }
        
        #region Properties
        public WinWindow UI_tbNewRuleWindow
        {
            get
            {
                if ((this.mUI_tbNewRuleWindow == null))
                {
                    this.mUI_tbNewRuleWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUI_tbNewRuleWindow.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Выберете нетерминал";
                    this.mUI_tbNewRuleWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
                    this.mUI_tbNewRuleWindow.WindowTitles.Add("Лексический анализатор");
                    #endregion
                }
                return this.mUI_tbNewRuleWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUI_tbNewRuleWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UI_tcTabsWindow : WinWindow
    {
        
        public UI_tcTabsWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_tcTabs";
            this.WindowTitles.Add("Лексический анализатор");
            #endregion
        }
        
        #region Properties
        public WinTabPage UIИспользованиеTabPage
        {
            get
            {
                if ((this.mUIИспользованиеTabPage == null))
                {
                    this.mUIИспользованиеTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUIИспользованиеTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Использование";
                    this.mUIИспользованиеTabPage.WindowTitles.Add("Лексический анализатор");
                    #endregion
                }
                return this.mUIИспользованиеTabPage;
            }
        }
        #endregion
        
        #region Fields
        private WinTabPage mUIИспользованиеTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UI_tbTextWindow : WinWindow
    {
        
        public UI_tbTextWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "_tbText";
            this.WindowTitles.Add("Лексический анализатор");
            #endregion
        }
        
        #region Properties
        public WinEdit UI_tbTextEdit
        {
            get
            {
                if ((this.mUI_tbTextEdit == null))
                {
                    this.mUI_tbTextEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUI_tbTextEdit.WindowTitles.Add("Лексический анализатор");
                    #endregion
                }
                return this.mUI_tbTextEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI_tbTextEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIОКWindow : WinWindow
    {
        
        public UIОКWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "ОК";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("ОК");
            #endregion
        }
        
        #region Properties
        public WinButton UIОКButton
        {
            get
            {
                if ((this.mUIОКButton == null))
                {
                    this.mUIОКButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIОКButton.SearchProperties[WinButton.PropertyNames.Name] = "ОК";
                    this.mUIОКButton.WindowTitles.Add("ОК");
                    #endregion
                }
                return this.mUIОКButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIОКButton;
        #endregion
    }
}
